[{"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\index.js":"1","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\App.js":"2","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\reportWebVitals.js":"3","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\components\\Quiz.js":"4","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\Data\\QuizData.js":"5","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\components\\QuizResult.js":"6","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\components\\AnswerTimer.js":"7"},{"size":535,"mtime":1693663404248,"results":"8","hashOfConfig":"9"},{"size":701,"mtime":1693665105641,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1693663404401,"results":"11","hashOfConfig":"9"},{"size":3008,"mtime":1693712601253,"results":"12","hashOfConfig":"9"},{"size":2937,"mtime":1693675130095,"results":"13","hashOfConfig":"9"},{"size":342,"mtime":1693711889943,"results":"14","hashOfConfig":"9"},{"size":387,"mtime":1693672915830,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uxfa0e",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\index.js",[],[],"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\App.js",[],[],"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\reportWebVitals.js",[],[],"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\components\\Quiz.js",["38"],[],"import React, { useState, useEffect } from 'react';\r\nimport { QuizData } from '../Data/QuizData';\r\nimport QuizResult from './QuizResult';\r\nimport AnswerTimer from './AnswerTimer';\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [clickedOption, setClickedOption] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(10); \r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (timerRunning && currentTime > 0) {\r\n      const timer = setInterval(() => {\r\n        setCurrentTime(currentTime - 1);\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    } else if (timerRunning && currentTime === 0) {\r\n\r\n      changeQuestion();\r\n    }\r\n  }, [timerRunning, currentTime]);\r\n\r\n  const startTimer = () => {\r\n    setTimerRunning(true);\r\n  };\r\n\r\n  const changeQuestion = () => {\r\n    updateScore();\r\n    if (currentQuestion < QuizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setClickedOption(0);\r\n      setCurrentTime(10); \r\n      startTimer(); \r\n    } else {\r\n      setShowResult(true);\r\n      setTimerRunning(false); \r\n    }\r\n  };\r\n\r\n  const updateScore = () => {\r\n    if (clickedOption === QuizData[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setShowResult(false);\r\n    setCurrentQuestion(0);\r\n    setClickedOption(0);\r\n    setScore(0);\r\n    setCurrentTime(10); \r\n    startTimer(); \r\n  };\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p className='heading-txt'></p>\r\n      <div className='container'>\r\n        {showResult ? (\r\n          <QuizResult score={score} totalScore={QuizData.length} tryAgain={resetAll} />\r\n        ) : (\r\n          <>\r\n            <AnswerTimer totalTime={10} currentTime={currentTime} />\r\n            <div className='question'>\r\n              <span id='question-number'>{currentQuestion + 1}.</span>\r\n              <span id='question-txt'>{QuizData[currentQuestion].question}</span>\r\n            </div>\r\n            <div className='option-container'>\r\n              {QuizData[currentQuestion].options.map((option, i) => {\r\n                return (\r\n                  <button\r\n                    className={`option-btn ${clickedOption === i + 1 ? 'checked' : null}`}\r\n                    key={i}\r\n                    onClick={() => {\r\n                      setClickedOption(i + 1);\r\n                    }}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n            <input\r\n              type='button'\r\n              value='Next'\r\n              id='next-button'\r\n              onClick={changeQuestion}\r\n              disabled={!timerRunning} \r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\Data\\QuizData.js",[],[],"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\components\\QuizResult.js",[],[],"C:\\SEM 5\\WCN LAB\\QuizApp\\quizapp\\src\\components\\AnswerTimer.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":27,"column":6,"nodeType":"41","endLine":27,"endColumn":33,"suggestions":"42"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeQuestion'. Either include it or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [timerRunning, currentTime, changeQuestion]",{"range":"46","text":"47"},[860,887],"[timerRunning, currentTime, changeQuestion]"]