{"ast":null,"code":"var _jsxFileName = \"C:\\\\SEM 5\\\\WCN LAB\\\\QuizApp\\\\quizapp\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QuizData } from '../Data/QuizData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [clickedOption, setClickedOption] = useState(0);\n  const changeQuestion = () => {\n    updateScore();\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setClickedOption(0);\n    } else {}\n  };\n  const updateScore = () => {\n    if (clickedOption === QuizData[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-txt\",\n      children: \" Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"question-number\",\n          children: [currentQuestion + 1, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"question-txt\",\n          children: QuizData[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-container\",\n        children: QuizData[currentQuestion].options.map((option, i) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            // className='option-btn'\n            className: `option-btn ${clickedOption == i + 1 ? \"checked\" : null}`,\n            onClick: () => setClickedOption(i + 1),\n            children: option\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Next\",\n        id: \"next-btn\",\n        onClick: changeQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"VGJhAKdfzZSi+5k8U9Eq5dQOUbI=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","QuizData","jsxDEV","_jsxDEV","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","clickedOption","setClickedOption","changeQuestion","updateScore","length","answer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","question","options","map","option","i","onClick","type","value","_c","$RefreshReg$"],"sources":["C:/SEM 5/WCN LAB/QuizApp/quizapp/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {QuizData} from '../Data/QuizData'\r\nfunction Quiz() {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [clickedOption, setClickedOption] = useState(0);\r\n    const changeQuestion = () =>{\r\n        updateScore();\r\n        if (currentQuestion < QuizData.length-1) {  \r\n            setCurrentQuestion(currentQuestion+1)\r\n            setClickedOption(0);\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const updateScore = ()=> {\r\n        if (clickedOption === QuizData[currentQuestion].answer){\r\n            setScore(score+1)\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <p className='heading-txt' > Quiz App</p>\r\n            <div className='container'> \r\n                <div className='question'>\r\n                    <span id='question-number'>{currentQuestion+1}.</span>\r\n                    <span id='question-txt'>{QuizData[currentQuestion].question}</span>\r\n\r\n                </div>\r\n                <div className='option-container'>\r\n                        {QuizData[currentQuestion].options.map((option, i)=>{\r\n                            return(\r\n                                <button \r\n                                // className='option-btn'\r\n                                className={`option-btn ${\r\n                                    clickedOption == i+1?\"checked\":null\r\n                                }`}\r\n                                key ={i}\r\n                                onClick = {()=>setClickedOption(i+1)}\r\n                                >\r\n                                    {option}\r\n\r\n                                </button>\r\n                            )\r\n                        })}\r\n                </div>\r\n                <input type='button' value=\"Next\" id='next-btn' onClick={changeQuestion}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}