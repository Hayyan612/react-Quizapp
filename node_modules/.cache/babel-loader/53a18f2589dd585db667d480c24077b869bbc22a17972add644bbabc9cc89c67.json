{"ast":null,"code":"var _jsxFileName = \"C:\\\\SEM 5\\\\WCN LAB\\\\QuizApp\\\\quizapp\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QuizData } from '../Data/QuizData';\nimport QuizResult from './QuizResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [clickedOption, setClickedOption] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const changeQuestion = () => {\n    updateScore();\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setClickedOption(0);\n    } else {\n      setShowResult(true);\n    }\n  };\n  const updateScore = () => {\n    if (clickedOption === QuizData[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-txt\",\n      children: \" Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showResult ? /*#__PURE__*/_jsxDEV(QuizResult, {\n        score: score,\n        totalScore: QuizData.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-number\",\n            children: [currentQuestion + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-txt\",\n            children: QuizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: QuizData[currentQuestion].options.map((option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              // className='option-btn'\n              className: `option-btn ${clickedOption == i + 1 ? \"checked\" : null}`,\n              onClick: () => setClickedOption(i + 1),\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Next\",\n          id: \"next-btn\",\n          onClick: changeQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"BAE8uDJWABXdhyGueM7c0xd6aC0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","QuizData","QuizResult","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","clickedOption","setClickedOption","showResult","setShowResult","changeQuestion","updateScore","length","answer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","totalScore","id","question","options","map","option","i","onClick","type","value","_c","$RefreshReg$"],"sources":["C:/SEM 5/WCN LAB/QuizApp/quizapp/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {QuizData} from '../Data/QuizData'\r\nimport QuizResult from './QuizResult';\r\nfunction Quiz() {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [clickedOption, setClickedOption] = useState(0);\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n\r\n    const changeQuestion = () =>{\r\n        updateScore();\r\n        if (currentQuestion < QuizData.length-1) {  \r\n            setCurrentQuestion(currentQuestion+1)\r\n            setClickedOption(0);\r\n        } else {\r\n            setShowResult(true)\r\n        }\r\n    }\r\n\r\n    const updateScore = ()=> {\r\n        if (clickedOption === QuizData[currentQuestion].answer){\r\n            setScore(score+1)\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <p className='heading-txt' > Quiz App</p>\r\n            <div className='container'> \r\n            {showResult ? (\r\n                <QuizResult score = {score} totalScore = {QuizData.length} />\r\n            ): (\r\n            <>\r\n                <div className='question'>\r\n                    <span id='question-number'>{currentQuestion+1}.</span>\r\n                    <span id='question-txt'>{QuizData[currentQuestion].question}</span>\r\n\r\n                </div>\r\n                <div className='option-container'>\r\n                        {QuizData[currentQuestion].options.map((option, i)=>{\r\n                            return(\r\n                                <button \r\n                                // className='option-btn'\r\n                                className={`option-btn ${\r\n                                    clickedOption == i+1?\"checked\":null\r\n                                }`}\r\n                                key ={i}\r\n                                onClick = {()=>setClickedOption(i+1)}\r\n                                >\r\n                                    {option}\r\n\r\n                                </button>\r\n                            )\r\n                        })}\r\n                </div>\r\n                <input type='button' value=\"Next\" id='next-btn' onClick={changeQuestion}/>\r\n                </>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}