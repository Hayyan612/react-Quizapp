{"ast":null,"code":"var _jsxFileName = \"C:\\\\SEM 5\\\\WCN LAB\\\\QuizApp\\\\quizapp\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QuizData } from '../Data/QuizData';\nimport QuizResult from './QuizResult';\nimport AnswerTimer from './AnswerTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [clickedOption, setClickedOption] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const changeQuestion = () => {\n    updateScore();\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setClickedOption(0);\n    } else {\n      setShowResult(true);\n    }\n  };\n  const updateScore = () => {\n    if (clickedOption === QuizData[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n  };\n  const resetAll = () => {\n    setShowResult(false);\n    setCurrentQuestion(0);\n    setClickedOption(0);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-txt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(AnswerTimer, {\n        totalTime: 30,\n        currentTime: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), \" \", showResult ? /*#__PURE__*/_jsxDEV(QuizResult, {\n        score: score,\n        totalScore: QuizData.length,\n        tryAgain: resetAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-number\",\n            children: [currentQuestion + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-txt\",\n            children: QuizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: QuizData[currentQuestion].options.map((option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `option-btn ${clickedOption === i + 1 ? 'checked' : null}`,\n              onClick: () => setClickedOption(i + 1),\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Next\",\n          id: \"next-button\",\n          onClick: changeQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"BAE8uDJWABXdhyGueM7c0xd6aC0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","QuizData","QuizResult","AnswerTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","clickedOption","setClickedOption","showResult","setShowResult","changeQuestion","updateScore","length","answer","resetAll","children","className","fileName","_jsxFileName","lineNumber","columnNumber","totalTime","currentTime","totalScore","tryAgain","id","question","options","map","option","i","onClick","type","value","_c","$RefreshReg$"],"sources":["C:/SEM 5/WCN LAB/QuizApp/quizapp/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {QuizData} from '../Data/QuizData'\r\nimport QuizResult from './QuizResult';\r\nimport AnswerTimer from './AnswerTimer';\r\nfunction Quiz() {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [clickedOption, setClickedOption] = useState(0);\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n\r\n    const changeQuestion = () =>{\r\n        updateScore();\r\n        if (currentQuestion < QuizData.length-1) {  \r\n            setCurrentQuestion(currentQuestion+1)\r\n            setClickedOption(0);\r\n        } else {\r\n            setShowResult(true)\r\n        }\r\n    }\r\n\r\n    const updateScore = ()=> {\r\n        if (clickedOption === QuizData[currentQuestion].answer){\r\n            setScore(score+1)\r\n        }\r\n    }\r\n\r\n    const resetAll = ( )=>{\r\n        setShowResult(false);\r\n        setCurrentQuestion(0);\r\n        setClickedOption(0);\r\n        setScore(0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <p className=\"heading-txt\"></p>\r\n          <div className=\"container\">\r\n            <AnswerTimer totalTime={30} currentTime={currentTime} /> {/* Add the AnswerTimer component here */}\r\n            {showResult ? (\r\n              <QuizResult score={score} totalScore={QuizData.length} tryAgain={resetAll} />\r\n            ) : (\r\n              <>\r\n                <div className=\"question\">\r\n                  <span id=\"question-number\">{currentQuestion + 1}.</span>\r\n                  <span id=\"question-txt\">{QuizData[currentQuestion].question}</span>\r\n                </div>\r\n                <div className=\"option-container\">\r\n                  {QuizData[currentQuestion].options.map((option, i) => {\r\n                    return (\r\n                      <button\r\n                        className={`option-btn ${\r\n                          clickedOption === i + 1 ? 'checked' : null\r\n                        }`}\r\n                        key={i}\r\n                        onClick={() => setClickedOption(i + 1)}\r\n                      >\r\n                        {option}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <input type=\"button\" value=\"Next\" id=\"next-button\" onClick={changeQuestion} />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}