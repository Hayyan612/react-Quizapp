{"ast":null,"code":"var _jsxFileName = \"C:\\\\SEM 5\\\\WCN LAB\\\\QuizApp\\\\quizapp\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { QuizData } from '../Data/QuizData';\nimport QuizResult from './QuizResult';\nimport AnswerTimer from './AnswerTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [clickedOption, setClickedOption] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [currentTime, setCurrentTime] = useState(10); // Timer starts at 10 seconds\n  const [timerRunning, setTimerRunning] = useState(false);\n  useEffect(() => {\n    if (timerRunning && currentTime > 0) {\n      const timer = setInterval(() => {\n        setCurrentTime(currentTime - 1);\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    } else if (timerRunning && currentTime === 0) {\n      // When the timer runs out, change the question\n      changeQuestion();\n    }\n  }, [timerRunning, currentTime]);\n  const startTimer = () => {\n    setTimerRunning(true);\n  };\n  const changeQuestion = () => {\n    updateScore();\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setClickedOption(0);\n      setCurrentTime(10); // Reset the timer to 10 seconds for the next question\n    } else {\n      setShowResult(true);\n    }\n    setTimerRunning(false); // Stop the timer when changing questions\n  };\n\n  const updateScore = () => {\n    if (clickedOption === QuizData[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n  };\n  const resetAll = () => {\n    setShowResult(false);\n    setCurrentQuestion(0);\n    setClickedOption(0);\n    setScore(0);\n    setCurrentTime(10); // Reset the timer when starting a new quiz\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-txt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showResult ? /*#__PURE__*/_jsxDEV(QuizResult, {\n        score: score,\n        totalScore: QuizData.length,\n        tryAgain: resetAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-number\",\n            children: [currentQuestion + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-txt\",\n            children: QuizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: QuizData[currentQuestion].options.map((option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `option-btn ${clickedOption === i + 1 ? 'checked' : null}`,\n              onClick: () => setClickedOption(i + 1),\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AnswerTimer, {\n          totalTime: 10,\n          currentTime: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Next\",\n          id: \"next-button\",\n          onClick: startTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"4NaKJ71Uw+xa8u3DnvFvrvi5qhI=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","QuizData","QuizResult","AnswerTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","clickedOption","setClickedOption","showResult","setShowResult","currentTime","setCurrentTime","timerRunning","setTimerRunning","timer","setInterval","clearInterval","changeQuestion","startTimer","updateScore","length","answer","resetAll","children","className","fileName","_jsxFileName","lineNumber","columnNumber","totalScore","tryAgain","id","question","options","map","option","i","onClick","totalTime","type","value","_c","$RefreshReg$"],"sources":["C:/SEM 5/WCN LAB/QuizApp/quizapp/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { QuizData } from '../Data/QuizData';\r\nimport QuizResult from './QuizResult';\r\nimport AnswerTimer from './AnswerTimer';\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [clickedOption, setClickedOption] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(10); // Timer starts at 10 seconds\r\n  const [timerRunning, setTimerRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (timerRunning && currentTime > 0) {\r\n      const timer = setInterval(() => {\r\n        setCurrentTime(currentTime - 1);\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    } else if (timerRunning && currentTime === 0) {\r\n      // When the timer runs out, change the question\r\n      changeQuestion();\r\n    }\r\n  }, [timerRunning, currentTime]);\r\n\r\n  const startTimer = () => {\r\n    setTimerRunning(true);\r\n  };\r\n\r\n  const changeQuestion = () => {\r\n    updateScore();\r\n    if (currentQuestion < QuizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setClickedOption(0);\r\n      setCurrentTime(10); // Reset the timer to 10 seconds for the next question\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n    setTimerRunning(false); // Stop the timer when changing questions\r\n  };\r\n\r\n  const updateScore = () => {\r\n    if (clickedOption === QuizData[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setShowResult(false);\r\n    setCurrentQuestion(0);\r\n    setClickedOption(0);\r\n    setScore(0);\r\n    setCurrentTime(10); // Reset the timer when starting a new quiz\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className='heading-txt' ></p>\r\n      <div className='container'> \r\n        {showResult ? (\r\n          <QuizResult score={score} totalScore={QuizData.length} tryAgain={resetAll} />\r\n        ) : (\r\n          <>\r\n            <div className='question'>\r\n              <span id='question-number'>{currentQuestion+1}.</span>\r\n              <span id='question-txt'>{QuizData[currentQuestion].question}</span>\r\n            </div>\r\n            <div className='option-container'>\r\n              {QuizData[currentQuestion].options.map((option, i)=>{\r\n                return(\r\n                  <button \r\n                    className={`option-btn ${clickedOption === i+1 ? 'checked' : null}`}\r\n                    key={i}\r\n                    onClick={() => setClickedOption(i+1)}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                )\r\n              })}\r\n            </div>\r\n            <AnswerTimer totalTime={10} currentTime={currentTime} />\r\n            <input type='button' value=\"Next\" id='next-button' onClick={startTimer}/>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}